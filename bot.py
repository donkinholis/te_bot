import sys
from pathlib import Path
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackContext
)
from handlers import start, help_command, admin_panel, search_youtube, handle_main_menu_buttons
from database.db import init_db
from loguru import logger
import os
from dotenv import load_dotenv
from telegram.error import TelegramError

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —à–ª—è—Ö—ñ–≤
sys.path.append(str(Path(__file__).parent))

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_IDS = [int(id) for id in os.getenv("ADMIN_IDS", "").split(",") if id]

async def post_init(app):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    await app.bot.set_my_commands([
        ("start", "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"),
        ("help", "–î–æ–≤—ñ–¥–∫–∞"),
        ("admin", "–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å"),
    ])

async def error_handler(update: object, context: CallbackContext):
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫"""
    logger.error(f"–ü–æ–º–∏–ª–∫–∞: {context.error}")
    return True

def main():
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–î
    init_db()
    
    try:
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
        app = Application.builder() \
            .token(TOKEN) \
            .post_init(post_init) \
            .build()
        
        # –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CommandHandler("help", help_command))
        
        # –û–±—Ä–æ–±–Ω–∏–∫ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ
        if ADMIN_IDS:
            app.add_handler(CommandHandler(
                "admin", 
                admin_panel, 
                filters=filters.User(ADMIN_IDS)
            )
        )
        # –û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        app.add_handler(MessageHandler(
            filters.TEXT & ~filters.COMMAND, 
            search_youtube
        ))
        
        # –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
        app.add_handler(MessageHandler(
            filters.TEXT & (
                filters.Regex("^üì∏ –í–∏–ø–∞–¥–∫–æ–≤–µ —Ñ–æ—Ç–æ$") |
                filters.Regex("^üéµ –í–∏–ø–∞–¥–∫–æ–≤–∞ –º—É–∑–∏–∫–∞$") |
                filters.Regex("^üí¨ –í–∏–ø–∞–¥–∫–æ–≤–∞ —Ü–∏—Ç–∞—Ç–∞$")
            ),
            handle_main_menu_buttons
        ))
        
        # –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
        app.add_error_handler(error_handler)
        
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!")
        app.run_polling()
        
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: {e}")
        raise
# ... —ñ–Ω—à—ñ —ñ–º–ø–æ—Ä—Ç–∏ ...

def main():
    init_db()
    
    try:
        app = Application.builder().token(TOKEN).build()
        
        # –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        app.add_handler(CommandHandler("start", start))
        
        # –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
        app.add_handler(MessageHandler(
            filters.TEXT & (
                filters.Regex("^üì∏ –í–∏–ø–∞–¥–∫–æ–≤–µ —Ñ–æ—Ç–æ$") |
                filters.Regex("^üéµ –í–∏–ø–∞–¥–∫–æ–≤–∞ –º—É–∑–∏–∫–∞$") |
                filters.Regex("^üí¨ –í–∏–ø–∞–¥–∫–æ–≤–∞ —Ü–∏—Ç–∞—Ç–∞$")
            ),
            handle_main_menu_buttons
        ))
        
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!")
        app.run_polling()
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞: {e}")
if __name__ == "__main__":
    main()